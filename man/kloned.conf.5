.\" $Id: kloned.conf.5,v 1.4 2005/10/06 16:10:40 tho Exp $
.TH "KLONED.CONF" "5" "10/06/2005" "KoanLogic Srl" "KoanLogic Srl"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
kloned.conf \- The configuration file for the kloned daemon
.SH "SYNOPSIS"
.PP
\fIkloned.conf\fR
is the configuration file for the
\fBkloned\fR(8)
daemon, i.e. it contains its runtime configuration information. The complete description of the file format and possibile parameters therein, is provided for reference in the following sections.
.SH "FILE FORMAT"
.PP
The file consists of sections and parameters. A section begins with the name of the section, is followed by a '{' and continues until the corresponding '}' is found. Sections can contain subsections or parameter assignements of the form:
\fIname\fR\fIvalue\fR.
.PP
The file is line\-based \- that is, each newline\-terminated line represents either a comment, a section name or a parameter.
.PP
Section and parameter names are case sensitive.
.PP
Leading, trailing and internal whitespace in section and parameter names is irrelevant. Leading and trailing whitespace in a parameter value is discarded. Internal whitespace within a parameter value is retained verbatim.
.PP
Any line beginning with a hash ('#') character is ignored, as well as lines containing only whitespace.
.PP
The value in parameters is always a string (no quotes needed) whose case is preserved.
.PP
It is also possible to use variable substitution which allows you to define a symbol name to be replaced by an arbitrary text string, with the classic bottom\-up scoping.
.SH "CONFIGURATION FILE STRUCTURE"
.PP
Basically, you have an activation record for each running
\fBkloned\fR(8)
instance: each instance implements an access method to the embedded data or to external data (file system) when requested. The two access methods currently implemented are HTTP and HTTPS.
.PP
The top level parameter
\fBserver_list\fR
lists the klone instances by name. For each name listed here there exist a corresponding activation record labelled with the same name.
.PP
For the sake of simplicity, the available options are grouped into three categories: those of general applicability (GENERAL), those common to both HTTP and HTTPS servers (SERVER), and those specific to HTTP over SSL/TLS sessions (SSL/TLS).
.SS "GENERAL"
.TP
\fBtype\fR
The access method used by this
\fBkloned\fR(8)
instance: at present
\fIHTTP\fR
or
\fIHTTPS\fR. This parameter is
\fImandatory\fR.
.TP
\fBdaemon.name\fR
Identifier for the service (Windows(TM)
ONLY).
.TP
\fBdaemon.description\fR
Service description (Windows(TM)
ONLY).
.TP
\fBaddr.type\fR
The protocol family (\fIIPv4\fR,
\fIIPv6\fR,
\fIUNIX\fR) of the interface socket. At present
\fIIPv4\fR
is the only value supported.
.TP
\fBaddr.ip\fR
The IPv4 address at which this instance is accepting connections. The default value is
\fBINADDR_ANY\fR.
.TP
\fBaddr.port\fR
The TCP port at which this instance is accepting connections. The default value is the standard HTTP server port,
\fI80\fR.
.TP
\fBbacklog\fR
Defines the maximum length the queue of pending connections may grow to, it is passed verbatim to the
\fBlisten\fR(2)
call on this instance's socket.
.TP
\fBidle_timeout\fR
Set the maximum number of seconds the server waits for an HTTP request on an already connected socket. The default value is 10 seconds.
.SS "SERVER"
.PP
Per server\-type configuration parameters.
.PP
Note that we use the URI
\fIsup://\fR
convention to specify the location of contents that
\fBkloned\fR
tries to retreive from its suppliers. By default there is only one active supplier, which is the embedded file system. Anyway, there could be many different suppliers, e.g. the local disk that is enabled by setting the
\fBENABLE_SUP_FS\fR
during compilation. The embedded file system supplier is
\fIalways\fR
searched first. In case the requested resource were not found in the embedded file system, the other suppliers are searched sequentially.
.TP
\fBdir_root\fR
The top level directory under which this server's instance keeps the site data. When a request for the resource
\fI/dir/page.kl1\fR
is done, it is mapped to
\fIsup://${dir_root}/dir/page.kl1\fR. The default value is
\fI/\fR.
.TP
\fBerror.\fR\fB\fIhttp_errno\fR\fR
Select the file which will be displayed on the given HTTP error event (\fIhttp_errno\fR
can be any of 4XX and 5XX). The value is a URI relative to the site: e.g.
\fI/a/b/c/d.klone\fR
is translated into
\fI(http|https)://sitehost[:port]/a/b/c/d.klone\fR.
.TP
\fBdir_alias \fR\fB\fIsrc\fR\fR\fB \fR\fB\fIdst\fR\fR
Substitutes
\fIsrc\fR
to
\fIdst\fR
in the requested URI. For example, when the following is set:
.sp
.nf
dir_alias /img /var/httpd/img
.fi
.sp
a request to
\fI(http|https)://sitehost[:port]/img/a.gif\fR
will be mapped to
\fI(http|https)://sitehost[:port]/var/httpd/img/a.gif\fR.
.TP
\fBserver_sig\fR
Set the server signature string which will be returned in the HTTP head (Server: %s). When setting a custom Product token, the guidelines stated in paragraph 3.7 of RFC 1945 should be followed. The default value is
"klone/1.0".
.TP
\fBserver_model\fR
Set the type of the serving model for this klone instance:
\fIfork\fR, a child process is spawned for every client request, or
\fIiterative\fR, pending clients are processed one at a time. Note that the
\fB\-F\fR
command line switch overrides this value. The default value is inherited from the parent
\fBkloned\fR
process.
.TP
\fBindex\fR
Specify the index page location. This is the page that is returned to the client requesting
\fI(http|https)://sitehost[:port]/\fR. The default values are (in order):
\fIindex.klone\fR,
\fIindex.kl1\fR,
\fIindex.html\fR,
\fIindex.htm\fR.
.PP
All the session variables are gathered into an ad hoc
\fBsession\fR
subsection of an HTTP or HTTPS activation record.
.TP
\fBtype\fR
Specify where to store session data:
\fImemory\fR
for the host volatile memory,
\fIfile\fR
for the host file system,
\fIclient\fR
for storing data on the client. The default value is
\fIfile\fR.
.TP
\fBmax_age\fR
Set the inactivity threshold timeout for the session. The default value is 60*20 seconds (20 minutes).
.TP
\fBmemory.mem_limit\fR
Set the maximum size in bytes for the memory used to hold the collection of all sessions' data. The default value is
\fI0\fR, i.e. unbounded.
.TP
\fBmemory.max_count\fR
Set the maximum number of sessions the server can store in memory. The default value is
\fI0\fR, i.e. unbounded.
.PP
NOTE: in case one of the two latter limits is exceeded, the data of the older inactive session will be discarded.
.TP
\fBfile.path\fR
Specify where to store session data when the
\fIfile\fR
driver is in use. The default value depends on the host platform: on
UNIX(TM)
it is
\fI/tmp\fR, on
Windows(TM)
the system temporary path.
.TP
\fBclient.hash_function\fR
The hash function that should be used in the HMAC calculation over the cookies. The available values are:
\fImd5\fR,
\fIsha1\fR,
\fIripemd160\fR. The default is
\fIsha1\fR.
.TP
\fBclient.encrypt\fR
A boolean specifying whether the session data should be encrypted before being sent to the client. The default is
\fIyes\fR.
.TP
\fBclient.compress\fR
A boolean specifying whether the session data should be compressed before being pushed to the client. The default is
\fIno\fR.
.SS "SSL/TLS"
.PP
All the cryptographic material examined in this section MUST not be password protected. This is because on unattended devices such as appliances or similar, password protection is useless if not harmful.
.TP
\fBcert_file\fR
PEM\-encoded certificate file for the server and optionally also its corresponding RSA or DSA Private Key file (contained in the same file). The certificate should be configured with the Common Name matching the fully qualified domain name of the server. This parameter is
\fImandatory\fR.
.TP
\fBkey_file\fR
PEM\-encoded private key file for the server. If the private key is not combined with the certificate in the
\fBcert_file\fR, use this additional directive to point to the file with the stand\-alone private key. When
\fBcert_file\fR
is used and the file contains both the certificate and the private key this directive need not be used. However, such practice is strongly discouraged. Instead the certificate should be separated from the private key. By default the value of
\fBcert_file\fR
is used.
.TP
\fBcertchain_file\fR
Optional all\-in\-one file where you can assemble the certificates of Certification Authorities (CA) which form the certificate chain of the server certificate. This starts with the issuing CA certificate of the server certificate and can range up to the root CA certificate. Such a file is simply the concatenation of the various PEM\-encoded CA Certificate files, usually in certificate chain order. This is intended for instance for the Verisign Global\-ID situation where one
\fIhas\fR
to send the intermediate CA of Verisign with the GID while one wants to avoid that under client authentication all clients issued by this CA are accepted, which would happen when one references the CA cert via
\fBca_file\fR.
.TP
\fBca_file\fR
All\-in\-one file where you can assemble the certificates of Certification Authorities (CA) for all certificates expected from clients. These are used for Client authentication. Such a file is simply the concatenation of the various PEM\-encoded certificate files, in order of preference. It is mandatory when
\fBverify_mode\fR
is
\fIrequired\fR.
.TP
\fBdh_file\fR
PEM\-encoded file containing Diffie\-Hellman parameters to be used on session data negotiation phase. When missing a default set of 1024\-bit DH parameters is used. Note that RSA ephemeral parameters are always created automatically.
.TP
\fBverify_depth\fR
This directive sets how deeply openssl should verify before deciding that the clients don't have a valid certificate. The depth actually is the maximum number of intermediate certificate issuers, i.e. the max number of CA certificates which are allowed to be followed while verifying the client certificate. A depth of 0 means that only self\-signed client certificates are accepted, the default depth of 1 means the client certificate can be self\-signed or has to be signed by a CA which is directly known to the server, i.e. the CA's certificate is under
\fBca_file\fR, etc.
.TP
\fBverify_mode\fR
This directive sets the certificate verification level for the Client authentication. The following values are available:
.RS
.TP
\fBNO\fR
no client certificate is required at all
.TP
\fBOPTIONAL\fR
the client may present a valid certificate
.TP
\fBREQUIRED\fR
the client has to present a valid certificate
.RE
.IP
.sp
Note that optional makes sense only in testing scenarios. The default value is
\fBNO\fR.
.SH "SEE ALSO"
.PP
\fBklone\fR(1),
\fBkloned\fR(8).
.PP
The standard
KLone
software distribution contains a complete and carefully annotated
\fIkloned\-sample.conf\fR
file which can be used as a reference.
.SH "AUTHOR"
.PP
KoanLogic Srl (http://www.koanlogic.com).
