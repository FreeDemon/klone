    remove broker stuff

    u_hexncpy() x HMAC_DATA

    session id nell'HMAC

    clises g_key

    makl_set_var in conf.h di tipo int (non "int")

    documentare che le clisession funzionano solo settando le variabili prima
    che l'header HTTP venga inviato...

changelog: 
    - deflate raw encoding used instead of zlib format
    - msg_* and warn_* added
    - idle connection timeout
    - timer_* added
    - u_sig_block, u_sig_unblock
    - in-memory sessions (just when SERVER_CONFIG_SERIAL)
    - config: bracket indenting parser support
    - config: comments after value string

todo
    - server model cleanup

------------------
win32:
    - #ifdef around fork() stuff
    - SIGCHLD on win32?? otherwise detach in some other way
    - use CGI interface as a workaround to missing fork() 
      (see apache::mod_cgi.c)

*nix:
    - logging
        + syslog logging (access, error, etc. [apache default format])
        + in-memory server-side logging (w/ circular buffer)

    - static pages encryption

    - session:
        + client-side session data (zip>encrypt>HMAC>b64e>cookie_1..N)?
        + in-memory session for fork-based server
          (io_create("mem://localhost/path/cxhd_sess_MD5", ...);
        + session.compress  yes|no
        + session.memory.max_count   10
        + session.memory.mem_limit   10k
        + session_file access locking

    - config
        + variables

    - uClibc 

    - thread-based server (so ses_mem will work easily)

    - io manager on tcp
        + io_create("file://host:port/path/file.ext", ...);
        + io_create("mem://host:port/path/file.ext", ...);

    - more request_ and response_ helper funcs (see jsp docs)
    - global BUFSZ size
    - change "server" name
    - move msg_ comments to dbg_
    - file upload support (RFC1867)
    - set proper idle_timeout (what about long POST requests?? see apache.)
      should timeout be reset on every read?

    - http/1.0: Basic Auth rfc1945:11
    - Pragma: no-cache for *.cxh pages? see php
    - Expires: 1/1/1970 for *.cxh pages? see php
    - Server field must use token/version
    - config param: server user/group owner
    - config param: server working directory
    - SERVER_MODE_{FORK,THREAD,SEQ} 
    - max script running time (kill after N seconds)


todo:
    - merge cxh + cxh-site
    - block signals during startup
    - io_printf: aggiungere %e o %q per stampare stringhe dopo averle 
        html-encoded
    - per-backend default config values (httpd, httpsd, etc.)
    - cxh-site must bail out on not existent included file
    - HTTPS support (ready?)
    - estendere se necessario classe string_t 
    - funzioni per base64 encoding/decoding
    - funzioni per URL
    - basic (and digest?) authentication (RFC2617)
    - security audit
        + ../../../../../../etc/passwd (se emb_fs e' abilitato)
        + buffer overflow, dos

1.x
    - HTTP/1.1 support (RFC2616)
    - funzione u_sendmail() o simili (drop-in nella spool o SMTP)
    - virtual host support (rfc2616.txt)

framework di sviluppo/porting:
    - supporto (nel configure) delle librerie che pensiamo possano essere 
      utilizzate piu' di frequente:
        [b]zlib, sqlite, regex, libGD, libjpeg, libpng, expat, ecc.
    - C++ support
    - parametro cxh-site per aggiungere/rimuovere un solo file 
      (per ora bisogna rifare l'import in toto)
    - mini moduli utili per il porting?
        + gestione time/date
        + gestione directory
        + gestione file
    - porting:
        + win32
        + *bsd
        + uClinux
        + altro (qnx?)
    - fine-grained compiling: modularizzare le funzionalita' 
      per poterle escludere in fase di compilazione (con #ifdef)
    - optimization type:
        + memory-efficient compiling 
            use gzip for content compression
            small io_t buffers
        + high performance compiling:
            use no compression
            big io_t buffers
    - altro per semplificare il lavoro allo sviluppatore finale?


configurazione (server.conf):
    - dimensioni del buffer del response_filter_t
    - scheduled pages retrival
      per eseguire degli script *.cxh ogni N minuti/ore
    - configurazione logging 
        + log mode (syslog/file/memory/none)
        + log errori 
        + log d'accesso
        + log rotation?

documentazione:
    - documentare il codice (doxygen)
        + API per i clienti
        + tutto il resto per noi
    - sito sezione cxh:
        + what is cxh
        + features
            = embedded static content (any file)
            = embedded C/C++ dynamic HTML pages
            = static content compression and encryption
            = server-side and client-side sessions
            = easy C script programming interfaces
            = ROMable binary
            = intellectual property protection
            = portable
            = ...
        + portability
        + license
        + support (free [mailing list] e commercial)
        + bug report
        + pricing
        + download 
        + online demo?
        + faq
        + API reference
        + tutorial

altro:
    - mailing list e/o forum
    - nome prodotto
    - logo prodotto

