TODO
------------------
    - doc
        - file upload
        - usare le func piu' semplici nel tutorial
        - splittare klone-docs.html
        - doxy libu in web doc klone
        - 'scripts' structure and syntax (or writing dynamic pages)
            + directive (@)
            + declaration (!)
            + code

            + predef variables:
                request, response, session, out
        - Setting up pages encryption
            + encrypt embedded content
            + key setup
        - installation
            + unix
            + win
        - Distributable Apps

    - altro
        - logo prodotto?
        - grafica per "build with klone"
    
    - test
        - profiling
        - code coverage (gcov)

    - codice
        - ritornare HTTP error code per upload di dimensioni sopra i limiti
          massimo (ora chiude la connessione)
        - io_html_printf: html-encode before calling io_printf 
        + <%=fmt arg %> con printf-style format
        - session locking
        - MatrixSSL support
        - file upload con callback (upload_on_chunk(...))
        - multiple-cookies cli-side sessions
        - io_html_printf: html-encode before calling io_printf 
        - session_bin_set
        - scripts ulimit to limit memory/cpu?
        - io_getc opt?
        - optimize request_parse on POST e request_parse_args
        - fine-grained compiling: modularizzare le funzionalita' 
          per poterle escludere in fase di compilazione (#ifdef)
        - tweak prefork spawn-new-child-timeout ?
        - security audit/todo
            - chroot("..."); chdir("/");
            - store sessions in a secure dir
            - disable core dumps?
            - check if output files are symlinks
            - last years apache security issues...
        - more request_ and response_ helper funcs (see jsp docs)
        - http/1.0: Basic Auth rfc1945:11  ??
        - HTTP/1.1 support (RFC2616)
        - funzione u_sendmail() o simili (drop-in nella spool o SMTP)
        - virtual host support (rfc2616.txt)
        - scheduled pages retrival
          per eseguire degli script *.kl1 ogni N minuti/ore
        - predictable memory usage (dimensioni max dei buffer temporanei ecc.)

FIRST RELEASE:
    - doc
        - file upload

    - sito
        + check install procedure

        - test cgi

        - OPT request_parse on POST e request_parse_args

        - man kloned.conf: per-server max_child

        - child keep-alive ppc cmd to avoid infinite wait in blocking
          calls (for ex. into write())?

        - move security options into per-server params

        - chroot and syslog [openlog(); chroot(); syslog()...;?]


        - sito embedded di default (nel tar.gz) con documentazione 


    - documentazione:
        - kloned-sample.conf
        - sito sezione klone:
            + what is klone 
            + features
                = embedded static content (any file)
                = embedded C/C++ dynamic HTML pages
                = static content compression and encryption
                = dynamic page static chunk compression
                = server-side (in-memory and on file) and client-side sessions
                = easy C script programming interfaces <% code %>
                = ROMable binary
                = intellectual property protection
                = portable
                = ...
            + portability
            + license
            + support (free [mailing list] e commercial)
            + bug report
            + pricing
            + download 
            + online demo?
            + faq
            + API reference
            + tutorial
        - documentare il codice (doxygen)
            + API (src/libpage/* e src/libio/*) per i clienti


docs:
    - manuale
        + installation
            unix
            win
        + running                       [stewy]
            normal              
            cgi-mode

        + handling forms                    [stewy]
            + string/int/bool variables
            + arrays

        + 'scripts' structure and syntax (or writing dynamic pages)
            directive (@)
            declaration (!)
            code

            predef variables:
                request, response, session, out

        + encryption in klone-features.html [stewy]

        + Setting up pages encryption
            encrypt embedded content
            key setup

        + why write web pages in C

    - altro
        + kloned.conf con tutte le opzioni commentate          [tho]
        + splittare klone-docs.html                            [stewy]
        + doxy libu in web doc klone                           [stewy]
        + set_key.klone example page
        + default documentation embedded site                  [stewy]
        + klone && kloned usage() proofreading (gia' fatto?)   [tho]
        + text msg proofreading                                [stewy]
        + feature: intellectual property protection            [stewy]
        + use cases                                            [tho]
        + proofreading inglese                                 [stewy]

