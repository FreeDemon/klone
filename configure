#!/bin/sh
#
# $Id: configure,v 1.54 2006/02/28 15:45:27 stewy Exp $

export makl_conf_h=klone_conf.h
export MAKL_DIR=`pwd`/makl

# before running configure the toolchain must be present
if [ ! -r ${MAKL_DIR}/etc/toolchain.cf ]; then
    echo
    echo " Run \"make toolchain\" (using GNU make) before \"./configure\"!"
    echo
    exit 1
fi

# MaKL preamble
. ${MAKL_DIR}/cf/makl.init

# Preprocess arguments
makl_args_init "$@"

# Custom arguments ...
makl_args_def   "enable_debug"      "" ""   "enables debugging of KLone app"
makl_args_def   "enable_libu_debug" "" ""   "enables debugging of LibU"
makl_args_def   "enable_libu_mini"  "" ""   "enables minimisation of LibU"
makl_args_def   "enable_profile"    "" ""   "enables profiling"
makl_args_def   "enable_sup_fs"     "" ""   "enables filesystem web access"
makl_args_def   "enable_warns"      "" ""   "set CFLAGS for extra warnings"
makl_args_def   "disable_cxx"       "" ""   "disable C++ support"

# ... and their handlers
__makl_enable_debug ()      { makl_append_var_mk  "CFLAGS" "-g -DDEBUG" ; }
__makl_enable_libu_debug () { makl_set_var_mk     "LIBU_DEBUG" ; }
__makl_enable_libu_mini ()  { makl_set_var_mk     "LIBU_MINI" ; }
__makl_enable_profile ()    { makl_append_var_mk  "CFLAGS" "-pg -a" ; }
__makl_enable_sup_fs ()     { makl_set_var_h      "ENABLE_SUP_FS" ; }
__makl_disable_cxx ()       { makl_unset_var      "USE_CXX" ; }
__makl_enable_warns ()        
{ 
    makl_append_var_mk "CFLAGS"                                     \
        "-W -Wall -Wstrict-prototypes -Wmissing-prototypes"         \
        "-Wpointer-arith -Wno-uninitialized -Wreturn-type"          \
        "-Wwrite-strings -Wswitch -Wshadow -Wwrite-strings"         \
        "-Wunreachable-code -Wunused -Wcast-qual"                   \
        "-pedantic"
        #"-std=c99"
}

# General settings
makl_pkg_name           "klone"
makl_pkg_version

# Source directory 
makl_set_var_mk         "SRCDIR"    "`pwd`"

# Add local 3rd party flags
makl_append_var_mk      "CFLAGS"    "-I`pwd`/libu"

case `makl_os_name` in

    *mingw* | *MINGW*)
        makl_set_var        "OS_WIN"
        makl_append_var_mk  "WIN_LDFLAGS"      "-lwsock32 -L/c/WINDOWS" 
        ;;

    *)
        makl_set_var        "OS_UNIX"
        ;;
esac

makl_append_var_mk "CFLAGS"   "-I`pwd` -O2 -DHAVE_CONF_H"

# these enable .klx pages
makl_append_var_mk "USE_CXX"  "1"
makl_append_var_mk "CXXFLAGS" "\${CFLAGS}"

# Install headers in a private subdir
makl_append_var_mk "INCDIR"   "\${DESTDIR}/include/klone"

# check for stdint header
makl_checkheader        0   "stdint"    "<stdint.h>"
makl_checkheader        0   "getopt"    "<getopt.h>"
makl_checkheader        0   "unistd"    "<unistd.h>"

# Library dependencies
makl_optional           1   "lib"   "openssl"   ""  "-lssl -lcrypto"
makl_optional           1   "lib"   "z"

# Function dependencies
makl_checktype          0   "pid_t"     "<sys/types.h>" 
makl_checkfunc          0   "syslog"
makl_checkfunc          0   "mkstemp"

# Binary dependencies
makl_optional           1    "featx"   "doxygen"    "PATH_DOXYGEN"

# Handle command-line arguments
makl_args_handle "$@"

# Add include dirs into top-level CFLAGS
makl_add_var_mk "CFLAGS" `makl_get_var_mk "LIBOPENSSL_CFLAGS"`
makl_add_var_mk "CFLAGS" `makl_get_var_mk "LIBZ_CFLAGS"`

. ${MAKL_DIR}/cf/makl.term
